<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.babelsoft</groupId>
    <artifactId>Negatron</artifactId>
    <version>1.0.0</version><!-- macOS forbids any versions using the pattern 0.x.x when building a dmg/pkg pack -->
    <packaging>jar</packaging>

    <name>Negatron</name>
    <description>Negatron, the user-friendly desktop front-end for MAME</description>
    <url>http://www.negatron.net/</url>
    <inceptionYear>2015</inceptionYear>
    <licenses>
        <license>
            <name>GPLv3+</name>
            <url>https://www.gnu.org/licenses/gpl.html</url>
            <comments>${copyright}</comments>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:git@github.com:xinyingho/Negatron.git</connection>
        <url>https://www.github.com/xinyingho/Negatron/tree/${project.scm.tag}</url>
        <tag>master</tag>
    </scm>
    <organization>
        <name>BabelSoft</name>
        <url>http://www.babelsoft.net/</url>
    </organization>
    <developers>
        <developer>
            <id>xinyingho</id>
            <name>Cyril APAN 黄保倫</name>
            <email>cyril.apan@babelsoft.net</email>
            <roles>
                <role>project manager</role>
                <role>functional architect</role>
                <role>business analyst</role>
                <role>technical architect</role>
                <role>developer</role> <!-- the only role that really matters -->
                <role>q/a</role>
                <role>support level 1/2/3</role>
                <role>release manager</role>
                <role>stakeholder</role> <!-- the other role that actually matters -->
                <role>product owner</role>
                <role>business owner</role>
            </roles>
            <timezone>Europe/Paris</timezone>
        </developer>
    </developers>

    <properties>
        <copyright>${project.organization.name} copyright © 2020</copyright>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <moduleName>negatron</moduleName>
        <mainClass>net.babelsoft.negatron.NegatronApp</mainClass>
        
        <package.basedir>${project.build.directory}/package</package.basedir>
        <package.runtime.output>${package.basedir}/runtime</package.runtime.output>
        <package.app.output>${package.basedir}/app</package.app.output>
        
        <javafx.version>23.0.1</javafx.version>
        <twelvemonkeys.version>3.12.0</twelvemonkeys.version>
        <openviewerfx.version>6.6.30-negatron</openviewerfx.version>
        <vlcj.version>4.8.3</vlcj.version>
        <sdl.version>3.1.8</sdl.version>
        
        <localLibPath>${project.basedir}/lib</localLibPath>
    </properties>
    
    <profiles>
        <profile>
            <id>win</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <os.name>Win64</os.name>
                <bundle.type>msi</bundle.type>
                <jpackage.home>${java.home}</jpackage.home>
                <icon>${project.basedir}/../Negatron-Bootstrap/Negatron-Bootstrap/Negatron.ico</icon>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.3.1</version>
                        <executions>
                            <execution>
                                <id>copy-resources-win</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${package.app.output}/vlc</outputDirectory>
                                    <resources>          
                                        <resource>
                                            <directory>${project.basedir}/vlc</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>              
                                </configuration>            
                            </execution>
                            <execution>
                                <id>copy-resources-win-sdl</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${package.app.output}</outputDirectory>
                                    <resources>          
                                        <resource>
                                            <directory>${project.basedir}/lib/sdl/${sdl.version}/win</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>              
                                </configuration>            
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <id>create-package</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <arguments>
                                        <argument>--type</argument>
                                        <argument>${bundle.type}</argument>
                                        <argument>--icon</argument>
                                        <argument>${icon}</argument>
                                        <argument>--app-version</argument>
                                        <argument>${project.version}</argument>
                                        <argument>--copyright</argument>
                                        <argument>${copyright}</argument>
                                        <argument>--name</argument>
                                        <argument>${project.name}</argument>
                                        <argument>--vendor</argument>
                                        <argument>${project.organization.name}</argument>
                                        <argument>--description</argument>
                                        <argument>${project.description}</argument>
                                        <argument>--license-file</argument>
                                        <argument>${project.basedir}/license.txt</argument>
                                
                                        <argument>--runtime-image</argument>
                                        <argument>${package.runtime.output}</argument>
                                        <argument>--input</argument>
                                        <argument>${package.app.output}</argument>
                                        
                                        <argument>--win-menu</argument>
                                        <argument>--win-dir-chooser</argument>
                                        <argument>--win-menu-group</argument>
                                        <argument>${project.organization.name}</argument>
                                        <argument>--win-upgrade-uuid</argument>
                                        <argument>b614f558-f821-44ed-a0f7-11ce7eddb3f5</argument>
                                
                                        <argument>--java-options</argument>
                                        <argument>-Xms512m</argument>
                                        <argument>--java-options</argument>
                                        <argument>-Xmx2g</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-exports</argument>
                                        <argument>--java-options</argument>
                                        <argument>javafx.controls/com.sun.javafx.scene.control.behavior=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-exports</argument>
                                        <argument>--java-options</argument>
                                        <argument>uk.co.caprica.vlcj.natives/uk.co.caprica.vlcj.binding.support.runtime=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-opens</argument>
                                        <argument>--java-options</argument>
                                        <argument>javafx.controls/javafx.scene.control=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-opens</argument>
                                        <argument>--java-options</argument>
                                        <argument>javafx.controls/javafx.scene.control.skin=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--enable-native-access=${moduleName}</argument>
                                        
                                        <argument>--module</argument>
                                        <argument>${moduleName}/${mainClass}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>macos</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <os.name>Mac64</os.name>
                <bundle.type>dmg</bundle.type>
                <jpackage.home>${java.home}</jpackage.home>
                <icon>${project.basedir}/../Negatron-Bootstrap/Negatron-Bootstrap/Negatron.icns</icon>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.3.1</version>
                        <executions>
                            <execution>
                                <id>copy-resources-mac</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${package.app.output}/VLC.app</outputDirectory>
                                    <resources>          
                                        <resource>
                                            <directory>${project.basedir}/VLC.app</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>              
                                </configuration>            
                            </execution>
                            <execution>
                                <id>copy-resources-mac-sdl</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${package.app.output}</outputDirectory>
                                    <resources>          
                                        <resource>
                                            <directory>${project.basedir}/lib/sdl/${sdl.version}/mac</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>              
                                </configuration>            
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <id>create-package</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <arguments>
                                        <argument>--type</argument>
                                        <argument>${bundle.type}</argument>
                                        <argument>--icon</argument>
                                        <argument>${icon}</argument>
                                        <argument>--app-version</argument>
                                        <argument>${project.version}</argument>
                                        <argument>--copyright</argument>
                                        <argument>${copyright}</argument>
                                        <argument>--name</argument>
                                        <argument>${project.name}</argument>
                                        <argument>--vendor</argument>
                                        <argument>${project.organization.name}</argument>
                                        <argument>--description</argument>
                                        <argument>${project.description}</argument>
                                        <argument>--license-file</argument>
                                        <argument>${project.basedir}/license.txt</argument>
                                
                                        <argument>--runtime-image</argument>
                                        <argument>${package.runtime.output}</argument>
                                        <argument>--input</argument>
                                        <argument>${package.app.output}</argument>
                                
                                        <argument>--java-options</argument>
                                        <argument>-Xms512m</argument>
                                        <argument>--java-options</argument>
                                        <argument>-Xmx2g</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-exports</argument>
                                        <argument>--java-options</argument>
                                        <argument>javafx.controls/com.sun.javafx.scene.control.behavior=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-exports</argument>
                                        <argument>--java-options</argument>
                                        <argument>uk.co.caprica.vlcj.natives/uk.co.caprica.vlcj.binding.support.runtime=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-opens</argument>
                                        <argument>--java-options</argument>
                                        <argument>javafx.controls/javafx.scene.control=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-opens</argument>
                                        <argument>--java-options</argument>
                                        <argument>javafx.controls/javafx.scene.control.skin=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--enable-native-access=${moduleName}</argument>
                                
                                        <argument>--module</argument>
                                        <argument>${moduleName}/${mainClass}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>linux</family>
                </os>
            </activation>
            <properties>
                <os.name>Lnx64</os.name>
                <bundle.type>rpm</bundle.type>
                <jpackage.home>${java.home}</jpackage.home>
                <icon>${project.basedir}/../Negatron-Bootstrap/Negatron-Bootstrap/Negatron.png</icon>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.3.1</version>
                        <executions>
                            <execution>
                                <id>copy-resources-lnx-sdl</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${package.app.output}</outputDirectory>
                                    <resources>          
                                        <resource>
                                            <directory>${project.basedir}/lib/sdl/${sdl.version}/lnx</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>              
                                </configuration>            
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <id>create-package</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <arguments>
                                        <argument>--type</argument>
                                        <argument>${bundle.type}</argument>
                                        <argument>--icon</argument>
                                        <argument>${icon}</argument>
                                        <argument>--app-version</argument>
                                        <argument>${project.version}</argument>
                                        <argument>--copyright</argument>
                                        <argument>${copyright}</argument>
                                        <argument>--name</argument>
                                        <argument>${project.name}</argument>
                                        <argument>--vendor</argument>
                                        <argument>${project.organization.name}</argument>
                                        <argument>--description</argument>
                                        <argument>${project.description}</argument>
                                        <argument>--license-file</argument>
                                        <argument>${project.basedir}/license.txt</argument>
                                
                                        <argument>--runtime-image</argument>
                                        <argument>${package.runtime.output}</argument>
                                        <argument>--input</argument>
                                        <argument>${package.app.output}</argument>
                                
                                        <argument>--linux-deb-maintainer</argument>
                                        <argument>cyril.apan@babelsoft.net</argument>
                                        <argument>--linux-app-category</argument>
                                        <argument>games</argument>
                                        <argument>--linux-menu-group</argument>
                                        <argument>Games</argument>
                                        <argument>--linux-rpm-license-type</argument>
                                        <argument>GPLv3+</argument>
                                
                                        <argument>--java-options</argument>
                                        <argument>-Xms512m</argument>
                                        <argument>--java-options</argument>
                                        <argument>-Xmx2g</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-exports</argument>
                                        <argument>--java-options</argument>
                                        <argument>javafx.controls/com.sun.javafx.scene.control.behavior=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-exports</argument>
                                        <argument>--java-options</argument>
                                        <argument>uk.co.caprica.vlcj.natives/uk.co.caprica.vlcj.binding.support.runtime=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-opens</argument>
                                        <argument>--java-options</argument>
                                        <argument>javafx.controls/javafx.scene.control=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--add-opens</argument>
                                        <argument>--java-options</argument>
                                        <argument>javafx.controls/javafx.scene.control.skin=${moduleName}</argument>
                                        <argument>--java-options</argument>
                                        <argument>--enable-native-access=${moduleName}</argument>
                                
                                        <argument>--module</argument>
                                        <argument>${moduleName}/${mainClass}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-bmp</artifactId>
            <version>${twelvemonkeys.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-core</artifactId>
            <version>${twelvemonkeys.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-metadata</artifactId>
            <version>${twelvemonkeys.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.common</groupId>
            <artifactId>common-lang</artifactId>
            <version>${twelvemonkeys.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.common</groupId>
            <artifactId>common-io</artifactId>
            <version>${twelvemonkeys.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.common</groupId>
            <artifactId>common-image</artifactId>
            <version>${twelvemonkeys.version}</version>
        </dependency>
        
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>Negatron-Preloader</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jpedal</groupId>
            <artifactId>OpenViewerFX</artifactId>
            <version>${openviewerfx.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.mozilla</groupId>
                    <artifactId>rhino</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <dependency>
            <groupId>net.java.dev.stax-utils</groupId>
            <artifactId>stax-utils</artifactId>
            <version>20100402</version>
            <scope>system</scope>
            <systemPath>${localLibPath}/stax-utils.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>uk.co.caprica</groupId>
            <artifactId>vlcj</artifactId>
            <version>${vlcj.version}</version>
        </dependency>
        <dependency>
            <groupId>com.eclipsesource.minimal-json</groupId>
            <artifactId>minimal-json</artifactId>
            <version>0.9.5</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src</sourceDirectory>
        <testSourceDirectory>${project.basedir}/test</testSourceDirectory>
        
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src</directory>
                <includes>
                    <include>**/*.css</include>
                    <include>**/*.fxml</include>
                    <include>**/*.pdf</include>
                    <include>**/*.png</include>
                    <include>**/*.ttf</include>
                    <include>**/*.txt</include>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>23</source>
                    <target>23</target>
                    <compilerArgs>
                        <arg>-Xlint:unchecked</arg>
                        <arg>-Xlint:deprecation</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addClasspath>true</addClasspath>
                            <!--classpathPrefix>lib/</classpathPrefix-->
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <execution>
                        <id>copy-libs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/modules</outputDirectory>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.coderplus.maven.plugins</groupId>
                <artifactId>copy-rename-maven-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>copy-target</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <sourceFile>${project.build.directory}/${project.build.finalName}.jar</sourceFile>
                            <destinationFile>${project.build.directory}/modules/${project.build.finalName}.jar</destinationFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${package.app.output}/theme</outputDirectory>
                            <resources>          
                                <resource>
                                    <directory>${project.basedir}/theme</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>              
                        </configuration>            
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.moditect</groupId>
                <artifactId>moditect-maven-plugin</artifactId>
                <version>1.2.2.Final</version>
                <executions>
                    <execution>
                        <id>add-module-info-to-deps</id>
                        <phase>package</phase>
                        <goals>
                            <goal>add-module-info</goal>
                        </goals>
                        <configuration>
                            <overwriteExistingFiles>true</overwriteExistingFiles>
                            <jdepsExtraArgs>
                                <arg>--multi-release</arg>
                                <arg>9</arg>
                            </jdepsExtraArgs>
                            <jvmVersion>${jvm.version}</jvmVersion>
                            <modules>
                                <module>
                                    <artifact>
                                        <groupId>com.twelvemonkeys.common</groupId>
                                        <artifactId>common-lang</artifactId>
                                        <version>${twelvemonkeys.version}</version>
                                    </artifact>
                                    <moduleInfo>
                                        <name>twelvemonkeys.common.lang</name>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.twelvemonkeys.common</groupId>
                                        <artifactId>common-io</artifactId>
                                        <version>${twelvemonkeys.version}</version>
                                    </artifact>
                                    <moduleInfo>
                                        <name>twelvemonkeys.common.io</name>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.twelvemonkeys.common</groupId>
                                        <artifactId>common-image</artifactId>
                                        <version>${twelvemonkeys.version}</version>
                                    </artifact>
                                    <moduleInfo>
                                        <name>twelvemonkeys.common.image</name>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.twelvemonkeys.imageio</groupId>
                                        <artifactId>imageio-bmp</artifactId>
                                        <version>${twelvemonkeys.version}</version>
                                    </artifact>
                                    <moduleInfo>
                                        <name>twelvemonkeys.imageio.bmp</name>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.twelvemonkeys.imageio</groupId>
                                        <artifactId>imageio-core</artifactId>
                                        <version>${twelvemonkeys.version}</version>
                                    </artifact>
                                    <moduleInfo>
                                        <name>twelvemonkeys.imageio.core</name>
                                    </moduleInfo>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>com.twelvemonkeys.imageio</groupId>
                                        <artifactId>imageio-metadata</artifactId>
                                        <version>${twelvemonkeys.version}</version>
                                    </artifact>
                                    <moduleInfo>
                                        <name>twelvemonkeys.imageio.metadata</name>
                                    </moduleInfo>
                                </module>
                                
                                <module>
                                    <artifact>
                                        <groupId>com.sun.activation</groupId>
                                        <artifactId>javax.activation</artifactId>
                                        <version>1.2.0</version>
                                    </artifact>
                                    <moduleInfo /> <!-- generates a default module-info -->
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>com.eclipsesource.minimal-json</groupId>
                                        <artifactId>minimal-json</artifactId>
                                        <version>0.9.5</version>
                                    </artifact>
                                    <moduleInfo /> <!-- generates a default module-info -->
                                </module>

                                <module>
                                    <file>lib/stax-utils.jar</file>
                                    <moduleInfo /> <!-- generates a default module-info -->
                                </module>
                            </modules>
                            <module>
                                <moduleInfo>
                                    <name>${moduleName}</name>
                                    <exports>
                                        net.babelsoft.negatron to javafx.graphics;
                                        net.babelsoft.negatron.controller to javafx.fxml;
                                        net.babelsoft.negatron.view.control to javafx.fxml;
                                        net.babelsoft.negatron.scene to com.sun.jna;
                                    </exports>
                                    <opens>
                                        net.babelsoft.negatron.controller to javafx.fxml;
                                        net.babelsoft.negatron.view.control to javafx.fxml;
                                        net.babelsoft.negatron.model.favourites to javafx.base;
                                        net.babelsoft.negatron.view.control.adapter to javafx.base;
                                        net.babelsoft.negatron.view.skin;
                                    </opens>
                                    <opensResources>
                                        net.babelsoft.negatron.resource;
                                        net.babelsoft.negatron.resource.icon;
                                        net.babelsoft.negatron.resource.icon.button;
                                        net.babelsoft.negatron.resource.icon.button.favourites;
                                        net.babelsoft.negatron.resource.icon.button.view;
                                        net.babelsoft.negatron.resource.icon.device;
                                        net.babelsoft.negatron.resource.icon.filter;
                                        net.babelsoft.negatron.resource.icon.status;
                                        net.babelsoft.negatron.resource.icon.tab;
                                        net.babelsoft.negatron.resource.icon.window;
                                        net.babelsoft.negatron.resource.video;
                                    </opensResources>
                                    <uses>
                                        net.babelsoft.negatron.theme.spi.LanguageUiProvider;
                                        net.babelsoft.negatron.view.glyphfont.GlyphFont;
                                    </uses>
                                    <provides>
                                        net.babelsoft.negatron.theme.spi.LanguageUiProvider with
                                            net.babelsoft.negatron.theme.spi.LanguageUiProviderImpl;
                                        net.babelsoft.negatron.view.glyphfont.GlyphFont with
                                            net.babelsoft.negatron.view.glyphfont.FontAwesome;
                                        uk.co.caprica.vlcj.factory.discovery.provider.DiscoveryDirectoryProvider with
                                            net.babelsoft.negatron.io.Video.LinuxDiscoveryDirectoryProvider,
                                            net.babelsoft.negatron.io.Video.OsxDiscoveryDirectoryProvider,
                                            net.babelsoft.negatron.io.Video.UserHintedDiscoveryDirectoryProvider,
                                            net.babelsoft.negatron.io.Video.WindowsDiscoveryDirectoryProvider;
                                    </provides>
                                </moduleInfo>
                            </module>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-runtime-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>create-runtime-image</goal>
                        </goals>
                        <configuration>
                            <modulePath>
                                <path>${project.build.directory}/modules</path>
                            </modulePath>
                            <modules>
                                <module>${moduleName}</module>
                                <module>twelvemonkeys.imageio.bmp</module>
                            </modules>
                            <excludedResources>
                                <pattern>glob:/net.babelsoft/**</pattern>
                            </excludedResources>
                            <!--launcher>
                                <name>Negatron</name>
                                <module>${moduleName}/${mainClass}</module>
                            </launcher-->
                            <stripDebug>true</stripDebug>
                            <ignoreSigningInformation>true</ignoreSigningInformation>
                            <jarInclusionPolicy>APP_WITH_DEPENDENCIES</jarInclusionPolicy>
                            <jdepsExtraArgs>
                                <args>-strip-native-commands</args>
                                <arg>-multi-release</arg>
                                <arg>9</arg>
                            </jdepsExtraArgs>
                            <outputDirectory>${package.runtime.output}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${java.home}/bin/java</executable>
                            <arguments>
                                <argument>-Xms512m</argument>
                                <argument>-Xmx2g</argument>
                                <argument>--add-exports</argument>
                                <argument>javafx.controls/com.sun.javafx.scene.control.behavior=${moduleName}</argument>
                                <argument>--add-exports</argument>
                                <argument>uk.co.caprica.vlcj.natives/uk.co.caprica.vlcj.binding.support.runtime=${moduleName}</argument>
                                <argument>--add-opens</argument>
                                <argument>javafx.controls/javafx.scene.control=${moduleName}</argument>
                                <argument>--add-opens</argument>
                                <argument>javafx.controls/javafx.scene.control.skin=${moduleName}</argument>
                                <argument>--enable-native-access=${moduleName}</argument>
                                <argument>--module-path</argument>
                                <argument>${project.build.directory}/modules</argument>
                                <argument>--module</argument>
                                <argument>${moduleName}/${mainClass}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <!-- Compiling and then packaging with the regular OpenJDK. As packaging features in JDK 23+ are now stable, the custom JDK to mitigate the shortcomings of the early packaging tools in JDK 14 is not needed anymore. -->
                            <!-- Each OS requires specific packaging options, which can be found in the profile section of this pom file -->
                            <executable>${jpackage.home}/bin/jpackage</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <longModulepath>false</longModulepath>
                            <environmentVariables>
                                <JAVA_HOME>${jpackage.home}</JAVA_HOME>
                            </environmentVariables>
                            <arguments>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>
                <executions>
                    <execution>
                        <id>cross-platform-pack</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>cross-platform-assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>installer-pack</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.name}-${os.name}-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>installer-assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
